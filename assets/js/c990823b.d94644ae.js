"use strict";(self.webpackChunkb_2_dvl_docs_site=self.webpackChunkb_2_dvl_docs_site||[]).push([[8229],{5019:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/graph-4a9b69ef49dd9885a6191b90bdb37547.png"},6659:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"references/graph-config","title":"Graph Configurations","description":"Take this config as an example:","source":"@site/versioned_docs/version-0.0/references/graph-config.md","sourceDirName":"references","slug":"/references/graph-config","permalink":"/Bench2Drive-VL/docs/references/graph-config","draft":false,"unlisted":false,"tags":[],"version":"0.0","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Supported VQAs","permalink":"/Bench2Drive-VL/docs/references/supported-vqas"},"next":{"title":"Inference Configurations","permalink":"/Bench2Drive-VL/docs/references/inference-config"}}');var r=s(4848),t=s(8453);const o={sidebar_position:2},c="Graph Configurations",l={},a=[{value:"Fields",id:"fields",level:2},{value:"Inference procedure",id:"inference-procedure",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"graph-configurations",children:"Graph Configurations"})}),"\n",(0,r.jsx)(n.p,{children:"Take this config as an example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"CHAIN": {\n    "NODE": [19, 15, 7, 24, 13, 47, 8, 43, 50],\n    "EDGE": {\n        "19": [24, 13, 8],\n        "15": [7, 8],\n        "7": [8],\n        "24": [13, 47],\n        "13": [47, 8, 43],\n        "47": [8],\n        "8": [43],\n        "43": [50],\n        "50": []\n    },\n    "INHERIT": {\n        "19": [43, 7],\n        "15": [7]\n    },\n    "USE_GT": [24]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In this config file, all numbers are questions' ",(0,r.jsx)(n.a,{href:"/Bench2Drive-VL/docs/references/supported-vqas",children:"qids"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"fields",children:"Fields"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"NODE"})," (type: ",(0,r.jsx)(n.code,{children:"list"}),"): List of all questions used in inference."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"EDGE"})," (type: ",(0,r.jsx)(n.code,{children:"dict[str, list]"}),"): A dictionary representing all edges in the graph, where each key is a predecessor node and its value is the list of successor nodes."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"INHERIT"})," (type: ",(0,r.jsx)(n.code,{children:"dict[str, list]"}),"): A dictionary where each key is a question that uses context from previous-frame questions, and each value is the list of those inherited questions."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"USE_GT"})," (type: ",(0,r.jsx)(n.code,{children:"list"}),"): List of questions that are answered directly using ground truth, without involving the VLM."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"inference-procedure",children:"Inference procedure"}),"\n",(0,r.jsx)(n.p,{children:"Before reasoning begins, the program performs a topological sort on all nodes, then proceeds with node-by-node inference. Note that for some object-wise questions, a single node may correspond to multiple questions for different objects. For each question,"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["All ",(0,r.jsx)(n.strong,{children:"immediate predecessor nodes"})," and the VLM answers to those nodes will be included in the context of the current question's prompt."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the current question ID is a key in the ",(0,r.jsx)(n.code,{children:"INHERIT"})," field, the program will look up all qids listed in the corresponding value list from the previous frame and also include them and their answers in the context."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If any of the context questions belong to the ",(0,r.jsx)(n.code,{children:"USE_GT"})," field, the corresponding ground truth will be used as this question's answer directly."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{title:"context order",type:"info",children:(0,r.jsx)(n.p,{children:"The order of questions in the context respects the same topological order used during inference."})}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"For the example given above, a valid single-frame inference sequence is as follows:"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Infer question 19 using the question\u2013answer pairs of question 43 and question 7 from the previous frame as context."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 24, but since it uses ground truth (GT), skip."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 13 using the question\u2013answer pairs of question 19 and question 24 from the current frame as context, where the answer to question 24 is taken from GT."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 47 using the question\u2013answer pairs of question 24 and question 19 from the current frame as context, where the answer to question 24 is taken from GT."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 15 using the question\u2013answer pair of question 7 from the previous frame as context."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 7 using the question\u2013answer pair of question 15 from the current frame as context."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 8 using the question\u2013answer pairs of questions 13, 47, 15, and 7 from the current frame as context."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 43 using the question\u2013answer pairs of questions 13 and 8 from the current frame as context."}),"\n",(0,r.jsx)(n.li,{children:"Infer question 50 using the question\u2013answer pair of question 43 from the current frame as context."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"corresponding graph",src:s(5019).A+"",width:"3208",height:"2661"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);